// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                String    @id @default(cuid())
  username          String    @unique
  email             String    @unique
  password          String
  furryName         String?
  profilePictureUrl String?
  fursuitGallery    Json?
  characterDetails  Json?
  socialMediaLinks  Json?
  interestTags      String[]
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  hostedEvents      Event[]   @relation("HostedEvents")
  rsvps             RSVP[]
}

model Event {
  id                String    @id @default(cuid())
  title             String
  coverImageUrl     String?
  description       String
  startDate         DateTime
  endDate           DateTime
  locationAddress   String?
  naverMapUrl       String?
  isLocationPublic  Boolean   @default(false)
  cost              Float     @default(0)
  attendeeCap       Int?
  hostId            String
  host              User      @relation("HostedEvents", fields: [hostId], references: [id])
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  eventRules        String?
  tags              String[]
  rsvps             RSVP[]
}

model RSVP {
  id            String      @id @default(cuid())
  userId        String
  user          User        @relation(fields: [userId], references: [id])
  eventId       String
  event         Event       @relation(fields: [eventId], references: [id])
  status        RSVPStatus
  paymentStatus PaymentStatus
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@unique([userId, eventId])
}

enum RSVPStatus {
  ATTENDING
  CONSIDERING
  NOT_ATTENDING
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
  NOT_APPLICABLE
}
